[
  {
    "$type": "BuiltInType",
    "kind": 1
  },
  {
    "$type": "BuiltInType",
    "kind": 2
  },
  {
    "$type": "BuiltInType",
    "kind": 3
  },
  {
    "$type": "BuiltInType",
    "kind": 4
  },
  {
    "$type": "BuiltInType",
    "kind": 5
  },
  {
    "$type": "BuiltInType",
    "kind": 6
  },
  {
    "$type": "BuiltInType",
    "kind": 7
  },
  {
    "$type": "BuiltInType",
    "kind": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/applications"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/applications",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 1,
        "description": "Application properties"
      },
      "tags": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "extensions": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The application extension."
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Extension",
    "discriminator": "kind",
    "baseProperties": {},
    "elements": {
      "daprSidecar": {
        "$ref": "#/21"
      },
      "kubernetesMetadata": {
        "$ref": "#/26"
      },
      "kubernetesNamespace": {
        "$ref": "#/30"
      },
      "manualScaling": {
        "$ref": "#/32"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DaprSidecarExtension",
    "properties": {
      "appPort": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "The Dapr appPort. Specifies the internal listening port for the application to handle requests from the Dapr sidecar."
      },
      "appId": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The Dapr appId. Specifies the identifier used by Dapr for service invocation."
      },
      "config": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Specifies the Dapr configuration to use for the resource."
      },
      "protocol": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "The Dapr sidecar extension protocol"
      },
      "kind": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "StringLiteralType",
    "value": "grpc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "daprSidecar"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtension",
    "properties": {
      "annotations": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Annotations to be applied to the Kubernetes resources output by the resource"
      },
      "labels": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "Labels to be applied to the Kubernetes resources output by the resource"
      },
      "kind": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtensionAnnotations",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtensionLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetesMetadata"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesNamespaceExtension",
    "properties": {
      "namespace": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The namespace of the application environment."
      },
      "kind": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetesNamespace"
  },
  {
    "$type": "ObjectType",
    "name": "ManualScalingExtension",
    "properties": {
      "replicas": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 1,
        "description": "Replica count."
      },
      "kind": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "manualScaling"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceStatus",
    "properties": {
      "compute": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Represents backing compute resource"
      },
      "recipe": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 2,
        "description": "Recipe status at deployment time for a resource."
      },
      "outputResources": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Properties of an output resource"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "EnvironmentCompute",
    "discriminator": "kind",
    "baseProperties": {
      "resourceId": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The resource id of the compute resource for application environment."
      },
      "identity": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "IdentitySettings is the external identity setting."
      }
    },
    "elements": {
      "kubernetes": {
        "$ref": "#/41"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentitySettings",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "IdentitySettingKind is the kind of supported external identity setting"
      },
      "oidcIssuer": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The URI for your compute platform's OIDC issuer"
      },
      "resource": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The resource ID of the provisioned identity"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "azure.com.workload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesCompute",
    "properties": {
      "namespace": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The namespace to use for the environment."
      },
      "kind": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 1,
        "description": "Discriminator property for EnvironmentCompute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "RecipeStatus",
    "properties": {
      "templateKind": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "TemplateKind is the kind of the recipe template used by the portable resource upon deployment."
      },
      "templatePath": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "TemplatePath is the path of the recipe consumed by the portable resource upon deployment."
      },
      "templateVersion": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "TemplateVersion is the version number of the template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OutputResource",
    "properties": {
      "localId": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The logical identifier scoped to the owning Radius resource. This is only needed or used when a resource has a dependency relationship. LocalIDs do not have any particular format or meaning beyond being compared to determine dependency relationships."
      },
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The UCP resource ID of the underlying resource."
      },
      "radiusManaged": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Determines whether Radius manages the lifecycle of the underlying resource."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/44"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/applications@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/10"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/containers"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/containers",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 1,
        "description": "Container properties"
      },
      "tags": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "container": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 1,
        "description": "Definition of a container"
      },
      "connections": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Specifies a connection to another resource."
      },
      "identity": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "IdentitySettings is the external identity setting."
      },
      "extensions": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "Extensions spec of the resource"
      },
      "resourceProvisioning": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Specifies how the underlying service/resource is provisioned and managed. Available values are 'internal', where Radius manages the lifecycle of the resource internally, and 'manual', where a user manages the resource."
      },
      "resources": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "A collection of references to resources associated with the container"
      },
      "restartPolicy": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 0,
        "description": "Restart policy for the container"
      },
      "runtimes": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "The properties for runtime configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/69"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Container",
    "properties": {
      "image": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The registry and image to download and run in your container"
      },
      "imagePullPolicy": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "The image pull policy for the container"
      },
      "env": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "environment"
      },
      "ports": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "container ports"
      },
      "readinessProbe": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Properties for readiness/liveness probe"
      },
      "livenessProbe": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Properties for readiness/liveness probe"
      },
      "volumes": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "container volumes"
      },
      "command": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "Entrypoint array. Overrides the container image's ENTRYPOINT"
      },
      "args": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Arguments to the entrypoint. Overrides the container image's CMD"
      },
      "workingDir": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Working directory for the container"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "IfNotPresent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContainerEnv",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPortProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "protocol": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "The protocol in use by the port"
      },
      "provides": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Specifies a route provided by this port"
      },
      "scheme": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Specifies the URL scheme of the communication protocol. Consumers can use the scheme to construct a URL. The value defaults to 'http' or 'https' depending on the port value"
      },
      "port": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "Specifies the port that will be exposed by this container. Must be set when value different from containerPort is desired"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TCP"
  },
  {
    "$type": "StringLiteralType",
    "value": "UDP"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPorts",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/77"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "HealthProbeProperties",
    "discriminator": "kind",
    "baseProperties": {
      "initialDelaySeconds": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "Initial delay in seconds before probing for readiness/liveness"
      },
      "failureThreshold": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "Threshold number of times the probe fails after which a failure would be reported"
      },
      "periodSeconds": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "Interval for the readiness/liveness probe in seconds"
      },
      "timeoutSeconds": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "Number of seconds after which the readiness/liveness probe times out. Defaults to 5 seconds"
      }
    },
    "elements": {
      "exec": {
        "$ref": "#/83"
      },
      "httpGet": {
        "$ref": "#/85"
      },
      "tcp": {
        "$ref": "#/88"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExecHealthProbeProperties",
    "properties": {
      "command": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Command to execute to probe readiness/liveness"
      },
      "kind": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "exec"
  },
  {
    "$type": "ObjectType",
    "name": "HttpGetHealthProbeProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "path": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The route to make the HTTP request on"
      },
      "headers": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "Custom HTTP headers to add to the get request"
      },
      "kind": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpGetHealthProbePropertiesHeaders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "httpGet"
  },
  {
    "$type": "ObjectType",
    "name": "TcpHealthProbeProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "kind": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Volume",
    "discriminator": "kind",
    "baseProperties": {
      "mountPath": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The path where the volume is mounted"
      }
    },
    "elements": {
      "ephemeral": {
        "$ref": "#/91"
      },
      "persistent": {
        "$ref": "#/96"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EphemeralVolume",
    "properties": {
      "managedStore": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 1,
        "description": "The managed store for the ephemeral volume"
      },
      "kind": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 1,
        "description": "Discriminator property for Volume."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "memory"
  },
  {
    "$type": "StringLiteralType",
    "value": "disk"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/92"
      },
      {
        "$ref": "#/93"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ephemeral"
  },
  {
    "$type": "ObjectType",
    "name": "PersistentVolume",
    "properties": {
      "permission": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "The persistent volume permission"
      },
      "source": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The source of the volume"
      },
      "kind": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 1,
        "description": "Discriminator property for Volume."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "read"
  },
  {
    "$type": "StringLiteralType",
    "value": "write"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "persistent"
  },
  {
    "$type": "ObjectType",
    "name": "ContainerVolumes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/90"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectionProperties",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The source of the connection"
      },
      "disableDefaultEnvVars": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "default environment variable override"
      },
      "iam": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "IAM properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IamProperties",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 1,
        "description": "The kind of IAM provider to configure"
      },
      "roles": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "RBAC permissions to be assigned on the source resource"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "azure"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPropertiesConnections",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/104"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "internal"
  },
  {
    "$type": "StringLiteralType",
    "value": "manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Resource id of an existing resource"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/113"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnFailure"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/116"
      },
      {
        "$ref": "#/117"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RuntimesProperties",
    "properties": {
      "kubernetes": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "The runtime configuration properties for Kubernetes"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesRuntimeProperties",
    "properties": {
      "base": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The serialized YAML manifest which represents the base Kubernetes resources to deploy, such as Deployment, Service, ServiceAccount, Secrets, and ConfigMaps."
      },
      "pod": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "A strategic merge patch that will be applied to the PodSpec object when this container is being deployed."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesPodSpec",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/containers@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/61"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 1,
        "description": "Environment properties"
      },
      "tags": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "compute": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "Represents backing compute resource"
      },
      "providers": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "The Cloud providers configuration"
      },
      "simulated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Simulated environment."
      },
      "recipes": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "Specifies Recipes linked to the Environment."
      },
      "extensions": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 0,
        "description": "The environment extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/130"
      },
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/132"
      },
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Providers",
    "properties": {
      "azure": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 0,
        "description": "The Azure cloud provider definition"
      },
      "aws": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 0,
        "description": "The AWS cloud provider definition"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvidersAzure",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Target scope for Azure resources to be deployed into.  For example: '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup'"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvidersAws",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Target scope for AWS resources to be deployed into.  For example: '/planes/aws/aws/accounts/000000000000/regions/us-west-2'"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "RecipeProperties",
    "discriminator": "templateKind",
    "baseProperties": {
      "templatePath": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Path to the template provided by the recipe. Currently only link to Azure Container Registry is supported."
      },
      "parameters": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Any object"
      }
    },
    "elements": {
      "bicep": {
        "$ref": "#/140"
      },
      "terraform": {
        "$ref": "#/142"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepRecipeProperties",
    "properties": {
      "plainHttp": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Connect to the Bicep registry using HTTP (not-HTTPS). This should be used when the registry is known not to support HTTPS, for example in a locally-hosted registry. Defaults to false (use HTTPS/TLS)."
      },
      "templateKind": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 1,
        "description": "Discriminator property for RecipeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bicep"
  },
  {
    "$type": "ObjectType",
    "name": "TerraformRecipeProperties",
    "properties": {
      "templateVersion": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Version of the template to deploy. For Terraform recipes using a module registry this is required, but must be omitted for other module sources."
      },
      "templateKind": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 1,
        "description": "Discriminator property for RecipeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "terraform"
  },
  {
    "$type": "ObjectType",
    "name": "DictionaryOfRecipeProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/139"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentPropertiesRecipes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/144"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/environments@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/126"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/extenders"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/extenders",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 1,
        "description": "ExtenderResource portable resource properties"
      },
      "tags": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtenderProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the environment that the portable resource is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the application that the portable resource is consumed by (if applicable)"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "secrets": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Any object"
      },
      "recipe": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 0,
        "description": "The recipe used to automatically deploy underlying infrastructure for a portable resource"
      },
      "resourceProvisioning": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 0,
        "description": "Specifies how the underlying service/resource is provisioned and managed. Available values are 'recipe', where Radius manages the lifecycle of the resource through a Recipe, and 'manual', where a user manages the resource and provides the values."
      }
    },
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/153"
      },
      {
        "$ref": "#/154"
      },
      {
        "$ref": "#/155"
      },
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/159"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Recipe",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The name of the recipe within the environment to use"
      },
      "parameters": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Any object"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "recipe"
  },
  {
    "$type": "StringLiteralType",
    "value": "manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/extenders@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/151"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/gateways"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/gateways",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 1,
        "description": "Gateway properties"
      },
      "tags": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "internal": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Sets Gateway to not be exposed externally (no public IP address associated). Defaults to false (exposed to internet)."
      },
      "hostname": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io."
      },
      "routes": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 1,
        "description": "Routes attached to this Gateway"
      },
      "tls": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "TLS configuration definition for Gateway resource."
      },
      "url": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 2,
        "description": "URL of the gateway resource. Readonly"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/173"
      },
      {
        "$ref": "#/174"
      },
      {
        "$ref": "#/175"
      },
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "GatewayHostname",
    "properties": {
      "prefix": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Specify a prefix for the hostname: myhostname.myapp.PUBLICHOSTNAMEORIP.nip.io. Mutually exclusive with 'fullyQualifiedHostname' and will be overridden if both are defined."
      },
      "fullyQualifiedHostname": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Specify a fully-qualified domain name: myapp.mydomain.com. Mutually exclusive with 'prefix' and will take priority if both are defined."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayRoute",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The path to match the incoming request path on. Ex - /myservice."
      },
      "destination": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The HttpRoute to route to. Ex - myserviceroute.id."
      },
      "replacePrefix": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Optionally update the prefix when sending the request to the service. Ex - replacePrefix: '/' and path: '/myservice' will transform '/myservice/myroute' to '/myroute'"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/180"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayTls",
    "properties": {
      "sslPassthrough": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If true, gateway lets the https traffic sslPassthrough to the backend servers for decryption."
      },
      "minimumProtocolVersion": {
        "type": {
          "$ref": "#/185"
        },
        "flags": 0,
        "description": "Tls Minimum versions for Gateway resource."
      },
      "certificateFrom": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The resource id for the secret containing the TLS certificate and key for the gateway."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "1.2"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.3"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/184"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/gateways@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/169"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/httpRoutes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/httpRoutes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/189"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 1,
        "description": "HTTPRoute properties"
      },
      "tags": {
        "type": {
          "$ref": "#/200"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpRouteProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "hostname": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The internal hostname accepting traffic for the HTTP Route. Readonly."
      },
      "port": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "The port number for the HTTP Route. Defaults to 80. Readonly."
      },
      "scheme": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 2,
        "description": "The scheme used for traffic. Readonly."
      },
      "url": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 2,
        "description": "A stable URL that that can be used to route traffic to a resource. Readonly."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/192"
      },
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
      },
      {
        "$ref": "#/197"
      },
      {
        "$ref": "#/198"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/httpRoutes@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/190"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/secretStores"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/secretStores",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/205"
        },
        "flags": 1,
        "description": "The properties of SecretStore"
      },
      "tags": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "type": {
        "type": {
          "$ref": "#/216"
        },
        "flags": 0,
        "description": "The type of SecretStore data"
      },
      "data": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 1,
        "description": "An object to represent key-value type secrets"
      },
      "resource": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The resource id of external secret store."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/207"
      },
      {
        "$ref": "#/208"
      },
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/210"
      },
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/212"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "generic"
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/214"
      },
      {
        "$ref": "#/215"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretValueProperties",
    "properties": {
      "encoding": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 0,
        "description": "The type of SecretValue Encoding"
      },
      "value": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The value of secret."
      },
      "valueFrom": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 0,
        "description": "The Secret value source properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "raw"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/218"
      },
      {
        "$ref": "#/219"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ValueFromProperties",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The name of the referenced secret."
      },
      "version": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The version of the referenced secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStorePropertiesData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/217"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/secretStores@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/204"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/volumes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/volumes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 26,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/225"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 1,
        "description": "Volume properties"
      },
      "tags": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "VolumeProperties",
    "discriminator": "kind",
    "baseProperties": {
      "environment": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/236"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Status of a resource."
      }
    },
    "elements": {
      "azure.com.keyvault": {
        "$ref": "#/237"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/229"
      },
      {
        "$ref": "#/230"
      },
      {
        "$ref": "#/231"
      },
      {
        "$ref": "#/232"
      },
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumeProperties",
    "properties": {
      "certificates": {
        "type": {
          "$ref": "#/250"
        },
        "flags": 0,
        "description": "The KeyVault certificates that this volume exposes"
      },
      "keys": {
        "type": {
          "$ref": "#/252"
        },
        "flags": 0,
        "description": "The KeyVault keys that this volume exposes"
      },
      "resource": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The ID of the keyvault to use for this volume resource"
      },
      "secrets": {
        "type": {
          "$ref": "#/258"
        },
        "flags": 0,
        "description": "The KeyVault secrets that this volume exposes"
      },
      "kind": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 1,
        "description": "Discriminator property for VolumeProperties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "encoding": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 0,
        "description": "Represents secret encodings"
      },
      "format": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 0,
        "description": "Represents certificate formats"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The name of the certificate"
      },
      "certType": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 0,
        "description": "Represents certificate types"
      },
      "version": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Certificate version"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "utf-8"
  },
  {
    "$type": "StringLiteralType",
    "value": "hex"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/239"
      },
      {
        "$ref": "#/240"
      },
      {
        "$ref": "#/241"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "pem"
  },
  {
    "$type": "StringLiteralType",
    "value": "pfx"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/243"
      },
      {
        "$ref": "#/244"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "privatekey"
  },
  {
    "$type": "StringLiteralType",
    "value": "publickey"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/246"
      },
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/248"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesCertificates",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/238"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The name of the key"
      },
      "version": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Key version"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesKeys",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/251"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "encoding": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 0,
        "description": "Represents secret encodings"
      },
      "name": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The name of the secret"
      },
      "version": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "secret version"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "utf-8"
  },
  {
    "$type": "StringLiteralType",
    "value": "hex"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/254"
      },
      {
        "$ref": "#/255"
      },
      {
        "$ref": "#/256"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/253"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "azure.com.keyvault"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/volumes@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/227"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Applications.Core/extenders",
    "apiVersion": "2023-10-01-preview",
    "output": {
      "$ref": "#/0"
    },
    "input": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreListSecretsResult",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/266"
        },
        "flags": 2,
        "description": "The type of SecretStore data"
      },
      "data": {
        "type": {
          "$ref": "#/267"
        },
        "flags": 2,
        "description": "An object to represent key-value type secrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "generic"
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/264"
      },
      {
        "$ref": "#/265"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreListSecretsResultData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/217"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Applications.Core/secretStores",
    "apiVersion": "2023-10-01-preview",
    "output": {
      "$ref": "#/263"
    },
    "input": {
      "$ref": "#/0"
    }
  }
]